{
  "name": "cached-levenshtein",
  "version": "1.0.0",
  "description": "Uses cache to save already computed levenshtein distance. If the strings you compare often repeat, this will save you a lot of compotation power",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "files": ["/dist"],
  "scripts": {
    "build": "tsc",
    "bench":"npm run build && tsc benchmarks.ts --target es2015 --module commonjs --moduleResolution nodenext --esModuleInterop && node ./benchmarks.js"
  },
  "keywords": [
    "levenshtein-distance",
    "levenshtein",
    "distance",
    "words",
    "algorithm",
    "fuzzy",
    "difference",
    "string",
    "fastest"
  ],
  "author": "Vladyslav Soldatenko",
  "license": "MIT",
  "dependencies": {
    "@types/node": "^18.16.0",
    "fastest-levenshtein": "^1.0.16",
    "timed-cache": "^1.1.5"
  },
  "repository": "https://github.com/Vladyslav-Soldatenko/cached-levenshtein",
  "devDependencies": {
    "@types/benchmark": "^2.1.2",
    "@types/timed-cache": "^2.0.1",
    "benchmark": "^2.1.4",
    "typescript": "^5.0.4"
  }
}
